from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# Переменная с информацией о животных
TOTEM_ANIMALS = {
    "медведь": "Медведь символизирует силу, уверенность и стойкость. В Московском зоопарке можно увидеть бурого медведя.",
    "волк": "Волк символизирует свободу и независимость. В Московском зоопарке содержатся серые волки.",
    "сова": "Сова является символом мудрости и знаний. В зоопарке можно увидеть различные виды сов.",
    "тигр": "Тигр символизирует мужество и решительность. В Московском зоопарке живут амурские тигры."
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text('Привет! Я бот Московского зоопарка. Напиши название животного, чтобы узнать о нем больше.')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = update.message.text.lower()
    if text in TOTEM_ANIMALS:
        response = TOTEM_ANIMALS[text]
    else:
        response = "Извините, информация о данном животном отсутствует. Попробуйте другое животное."
    await update.message.reply_text(response)

def main():
    TOKEN = '7022857202:AAH_L_jaR0wiad59PZcAskRG0uXTMUrzPaI'

    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()

if __name__ == '__main__':
    main()
